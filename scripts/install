#!/bin/bash

# Renseigne les variables à partir des arguments.
domain=$1
path=$2
admin_wordpress=$3
language=$4
multisite=$5
is_public=$6
app=wordpressms

# Vérifie la validité de l'user admin
sudo yunohost user list --json | grep -q "\"username\": \"$admin_wordpress\""
if [[ ! $? -eq 0 ]]; then
    echo "Wrong admin"
    exit 1
fi

# Vérifie la présence du / en début de path
if [ $(echo $path | cut -c1) != "/" ]; then
    path="/$path"
fi

# Vérifie la disponibilité du path et du domaine.
sudo yunohost app checkurl $domain$path -a $app
if [[ ! $? -eq 0 ]]; then
    exit 1
fi

# Vérifie que le dossier de destination n'est pas déjà utilisé.
final_path=/var/www/$app
if [ -e "$final_path" ]
then
    echo "This path already contains a folder"
    exit 1
fi


# Enregistre les infos dans la config YunoHost
sudo yunohost app setting $app domain -v $domain
sudo yunohost app setting $app path -v $path
sudo yunohost app setting $app admin -v $admin_wordpress
sudo yunohost app setting $app is_public -v $is_public
sudo yunohost app setting $app language -v $language
sudo yunohost app setting $app multisite -v $multisite


# Génère un mot de passe aléatoire.
db_pwd=$(dd if=/dev/urandom bs=1 count=200 2> /dev/null | tr -c -d 'A-Za-z0-9' | sed -n 's/\(.\{24\}\).*/\1/p')
# Utilise '$app' comme nom d'utilisateur et de base de donnée
db_user=$app
# Initialise la base de donnée et stocke le mot de passe mysql.
sudo yunohost app initdb $db_user -p $db_pwd
sudo yunohost app setting $app mysqlpwd -v $db_pwd


# Crée le repertoire de destination et stocke son emplacement.
sudo mkdir "$final_path"
sudo yunohost app setting $app final_path -v $final_path


# Décompresse la source
tar -x -f ../sources/wordpress.tar.gz
# Copie les fichiers sources
sudo cp -a wordpress/. "$final_path"
# Copie les fichiers additionnels ou modifiés.
sudo cp -a ../sources/ajouts/. "$final_path"
# Et copie le fichier de config nginx
sudo cp ../conf/nginx.conf /etc/nginx/conf.d/$domain.d/$app.conf


# Modifie les variables dans le fichier de configuration nginx
sudo sed -i "s@__PATHTOCHANGE__@$path@g" /etc/nginx/conf.d/$domain.d/$app.conf
sudo sed -i "s@__FINALPATH__@$final_path@g" /etc/nginx/conf.d/$domain.d/$app.conf
sudo sed -i "s@__NAMETOCHANGE__@$app@g" /etc/nginx/conf.d/$domain.d/$app.conf

# Créer le fichier de configuration du pool php-fpm et le configure.
sed -i "s@__NAMETOCHANGE__@$app@g" ../conf/php-fpm.conf
sed -i "s@__FINALPATH__@$final_path@g" ../conf/php-fpm.conf
finalphpconf=/etc/php5/fpm/pool.d/$app.conf
sudo cp ../conf/php-fpm.conf $finalphpconf
sudo chown root: $finalphpconf
finalphpini=/etc/php5/fpm/conf.d/20-$app.ini
sudo cp ../conf/php-fpm.ini $finalphpini
sudo chown root: $finalphpini
sudo service php5-fpm reload



sudo cp ../conf/wp-config.php $final_path/wp-config.php

# Change variables in Wordpress configuration
sudo sed -i "s/__DB_USER__/$db_user/g" $final_path/wp-config.php
sudo sed -i "s/__DB_PWD__/$db_pwd/g" $final_path/wp-config.php
sudo sed -i "s/__DOMAIN__/$domain/g" $final_path/wp-config.php
sudo sed -i "s@__PATH__@$path@g" $final_path/wp-config.php


for i in 1 2 3 4 5 6 7 8
do
    j=$(dd if=/dev/urandom bs=1 count=200 2> /dev/null | tr -c -d '[A-Za-z0-9]' | sed -n 's/\(.\{40\}\).*/\1/p')
    if [ "$j" = "" ];
    then
        # For obscure reasons, the loop is too fast at execution
        sleep 1
        j=$(dd if=/dev/urandom bs=1 count=200 2> /dev/null | tr -c -d '[A-Za-z0-9]' | sed -n 's/\(.\{40\}\).*/\1/p')
    fi
    sudo sed -i "s/KEY$i/$j/g" $final_path/wp-config.php
done

# Set permissions to wordpress directory
sudo chown -R www-data: $final_path

# Donne un accès public pour curl
sudo yunohost app setting wordpressms skipped_uris -v "/"
# Recharge la configuration Nginx et php5-fpm
sudo service nginx reload
sudo service php5-fpm reload
# Régénère la configuration de SSOwat
sudo yunohost app ssowatconf


# Wordpress installation
echo "127.0.0.1 $domain #wordpress_yunohost" | sudo tee -a /etc/hosts
curl -kL --data "&weblog_title=YunoBlog&user_name=$admin_wordpress&admin_password=$db_pwd&admin_password2=$db_pwd&admin_email=$admin_wordpress@$domain&language=$language&Submit=Install+WordPress" https://$domain$path/wp-admin/install.php?step=2 > /dev/null 2>&1

sleep 5
mysql -u $db_user -p$db_pwd $db_user -e "select * from wp_options;" > /dev/null 2>&1
result=$?
loop_number=1
while [ $result != 0 ] && [ $loop_number -lt 5 ];
do
	sleep 5
	mysql -u $db_user -p$db_pwd $db_user -e "select * from wp_options;" > /dev/null 2>&1
	let result=$?
	let loop_number++
done

# Replace variables in sql scripts
sudo sed -i "s@__DOMAIN_PATH__@$domain$path@g" ../conf/sql/*.sql
sudo sed -i "s/__LANGUAGE__/$language/g" ../conf/sql/*.sql
sudo sed -i "s/__DATE__/$(date +%s)/g" ../conf/sql/*.sql

# Charge les commandes sql communes à tous les scripts.
mysql -u $db_user -p$db_pwd $db_user < ../conf/sql/common.sql

if [ "$multisite" = "Yes" ];
then
	# Installation de php5-cli pour wp-cli
	sudo apt-get update
	sudo apt-get install php5-cli -qy

    sudo sed -i "s@#--MULTISITE--@@g" /etc/nginx/conf.d/$domain.d/wordpressms.conf
    # Autorise le multisite wordpress
    sudo sed -i "s@//--MULTISITE1--define@define@g" $final_path/wp-config.php

	# Active le multisite via wp-cli.
  	php $final_path/wp-cli.phar core multisite-convert --path=$final_path --base=$path/
	echo "The 2 warnings of php about \"Permission denied\" on wp-config.php are normal. The install script writing into this file, not wp-cli!"

    # Active le multisite wordpress
    sudo sed -i "s@//--MULTISITE2--define@define@g" $final_path/wp-config.php

    # Charge les commandes sql pour les plugins
    if [ "$is_public" = "No" ];
    then
		sudo sed -i "s@#--PRIVATE--@@g" ../conf/sql/multisite.sql
    else
		sudo sed -i "s@#--PUBLIC--@@g" ../conf/sql/multisite.sql
    fi
	mysql -u $db_user -p$db_pwd $db_user < ../conf/sql/multisite.sql
else
	if [ "$is_public" = "No" ];
	then
		sudo sed -i "s@#--PRIVATE--@@g" /etc/nginx/conf.d/$domain.d/wordpressms.conf
		sudo sed -i "s@#--PRIVATE--@@g" ../conf/sql/single.sql
	else
		sudo sed -i "s@//--PUBLIC--define@define@g" $final_path/wp-config.php
		sudo sed -i "s@#--PRIVATE--@#@g" /etc/nginx/conf.d/$domain.d/wordpressms.conf
		sudo sed -i "s@#--PUBLIC--@@g" ../conf/sql/single.sql
	fi
	# Charge les commandes sql pour les plugins
	mysql -u $db_user -p$db_pwd $db_user < ../conf/sql/single.sql
fi

# Configure les droits d'accès au fichiers
# -rw-r--r-- sur les fichiers
sudo find $final_path -type f -print0 | xargs -0 sudo chmod 644
# drwxr-xr-x sur les dossiers
sudo find $final_path -type d -print0 | xargs -0 sudo chmod 755
# Les fichiers appartiennent à root
sudo chown -R root: $final_path
# Sauf le dossier wp-content qui appartient à www-data
sudo chown -R www-data:root $final_path/wp-content

if [ "$is_public" = "No" ];
then
	# Retire l'accès public
	sudo yunohost app setting wordpressms skipped_uris -d
	sudo yunohost app ssowatconf
fi

# Clean hosts
sudo sed -i '/#wordpress_yunohost/d' /etc/hosts

sudo service nginx reload
# wp-cli me semble un peu trop permissif... Il a terminé son travail...
sudo rm $final_path/wp-cli.phar
